name: An example of an automatic testing action
on:
  push:
    branches:
      - ci-cd-pipeline
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Match the Python version used in your app

      # Cache Python dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: |
          cd app
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8

      # Run linting with flake8
      - name: Run linting
        run: |
          cd app
          flake8 . --max-line-length=120 --exclude=venv,.git

      # Run unit tests with pytest
      - name: Run unit tests
        run: |
          cd app
          pytest --cov=./ --cov-report=xml
        env:
          METRICS_NAMESPACE: fastapi
          METRICS_SUBSYSTEM: model
          ENABLE_METRICS: true

      # Upload coverage report (optional)
      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          files: app/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

